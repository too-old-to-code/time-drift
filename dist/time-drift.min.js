(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.timeDrift = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";function timeDrift(t,e){if(!/^\d\d.\d\d(.\d\d)?$/.test(t))throw new Error("Time format is incorrect. It should be either 'HH:MM:SS' or 'HH:MM', where the colon can be replaced by a non-numerical character");const r=t.split(/[.:\- ]/).map(t=>Number(t));let[n,o,s]=r;if(n>23||n<0)throw new Error("Hours must be between 0 and 23");if(o>59||o<0)throw new Error("Minutes must be between 0 and 59");if(null!=s&&(s>59||s<0))throw new Error("Seconds must be between 0 and 59");if(e&&("string"!=typeof e||e.length>1))throw new Error("Separator must be a single, non-numerical character");function i(t,e){if("number"!=typeof t)throw new Error(`First argument of ${e} method must be a number`)}function a(t,e){if("string"!=typeof t)throw new Error(`Second argument of ${e} method must be a string representing the unit of time`);let r=t.charAt(0).toLowerCase();if(!["h","m","s"].includes(r))throw new Error(`Second argument of ${e} method must be hours, minutes or seconds`);if("s"===r&&null==s)throw new Error("You can't adjust seconds if they weren't included in the original time given");return r}const h={normalize:t=>(null==s&&t.pop(),t.map(function(t){return(t=String(t)).length<2?"0"+t:t}).join(e||":")),hasCrossedMidnight:!1,add(t,e){switch(i(t,"add"),a(e,"add")){case"h":this.hasCrossedMidnight=Boolean(Math.floor((n+t)/24)),n=(n+t)%24;break;case"m":let r=Math.floor((o+t)/60);o=(o+t)%60,this.add(r,"h");break;case"s":let h=Math.floor((s+t)/60);s=(s+t)%60,this.add(h,"m")}return this},subtract(t,e){i(t,"subtract");let r=0;switch(a(e,"subtract")){case"h":let i=n-t;for(;i<0;)r++,i=24+i;n=i,r&&(this.hasCrossedMidnight=!0);break;case"m":let h=o-t;for(;h<0;)r++,h=60+h;o=h,r&&this.subtract(r,"h");break;case"s":let u=s-t;for(;u<0;)r++,u=60+u;s=u,r&&this.subtract(r,"m")}return this}};return Object.defineProperty(h,"val",{get:function(){return this.normalize([n,o,s])}}),h.add=h.add.bind(h),h.subtract=h.subtract.bind(h),h}module.exports=timeDrift;

},{}]},{},[1])(1)
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
